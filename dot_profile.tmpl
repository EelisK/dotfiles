# shellcheck shell=sh

#==============================================================#
##  ENVIRONMENT VARIABLES                                     ##
#==============================================================#

export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_STATE_HOME="${HOME}/.local/state"

export HOMEBREW_BUNDLE_FILE="${HOME}/.Brewfile"

export VISUAL="{{ .editor }}"
export EDITOR="{{ .editor }}"

export WORKSPACE_DIR="${HOME}/workspace"

# {{- if eq .chezmoi.os "darwin" }}
SDKROOT="$(xcrun --sdk macosx --show-sdk-path)"
export SDKROOT
# {{- end }}

if [ -x /home/linuxbrew/.linuxbrew/bin/brew ]; then
    # shellcheck disable=SC2312
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
elif [ -x "${HOME}/.linuxbrew/bin/brew" ]; then
    # shellcheck disable=SC2312
    eval "$("${HOME}/.linuxbrew/bin/brew" shellenv)"
fi

#==============================================================#
##  PATH                                                      ##
#==============================================================#

# {{- if eq .chezmoi.os "darwin" }}
if [ -d "/usr/local/opt/coreutils/libexec/gnubin" ]; then
    export PATH="/usr/local/opt/coreutils/libexec/gnubin:${PATH}"
fi

if [ -d "/opt/homebrew/bin" ]; then
    export PATH="/opt/homebrew/bin:${PATH}"
fi

if [ -d "/opt/homebrew/sbin" ]; then
    export PATH="/opt/homebrew/sbin:${PATH}"
fi
# {{- end }}

if [ -d "${HOME}/.deno/bin" ]; then
    export DENO_INSTALL="${HOME}/.deno"
    export PATH="${DENO_INSTALL}/bin:${PATH}"
fi

if [ -r "${HOME}/.sdkman/bin/sdkman-init.sh" ]; then
    export SDKMAN_DIR="${HOME}/.sdkman"
    # shellcheck disable=SC1091
    . "${HOME}/.sdkman/bin/sdkman-init.sh"
fi

if [ -d "${HOME}/.cargo/bin" ]; then
    export PATH="${HOME}/.cargo/bin:${PATH}"
fi

if [ -d "${HOME}/.nvm" ]; then
    export NVM_DIR="${HOME}/.nvm"
    # shellcheck disable=SC1091
    . "${NVM_DIR}/nvm.sh"
    if [ -d "${NVM_DIR}/bash_completion" ]; then
        # shellcheck disable=SC1091
        . "${NVM_DIR}/bash_completion"
    fi
fi

if [ -d "${HOME}/.rbenv" ]; then
    export PATH="${HOME}/.rbenv/bin:${PATH}"
    export PATH="${HOME}/.rbenv/shims:${PATH}"
fi

if [ -d "${HOME}/go/bin" ]; then
    export PATH="${HOME}/go/bin:${PATH}"
fi

if [ -d "${HOME}/.pyenv" ]; then
    export PYENV_ROOT="${HOME}/.pyenv"
    export PATH="${PYENV_ROOT}/bin:${PATH}"
    eval "$(pyenv init --path)" || true
fi

if [ -d "${HOME}/bin" ]; then
    export PATH="${HOME}/bin:${PATH}"
fi

if [ -d "${HOME}/.local/bin" ]; then
    export PATH="${HOME}/.local/bin:${PATH}"
fi

if [ -d "${HOME}/.nix-profile/bin" ]; then
    export PATH="${HOME}/.nix-profile/bin:${PATH}"
fi

#==============================================================#
##  FUNCTIONS                                                 ##
#==============================================================#

ask() {
    while true; do
        printf '%s [y/n] ' "${1}"
        read -r reply </dev/stdin
        # Check if the reply is valid
        case "$reply" in
        Y* | y*) return 0 ;;
        N* | n*) return 1 ;;
        esac
    done
}

work() {
    (cd "${WORKSPACE_DIR}"/"$1" && nvim)
}

dotfiles() {
    # shellcheck disable=SC3043
    local difference
    if (cd "$(chezmoi source-path)" && nvim "$@"); then
        difference="$(chezmoi diff)"
        # shellcheck disable=SC3060
        if [ -n "${difference// /}" ] &&
            echo "${difference}" &&
            ask "Apply changes" </dev/stdin; then
            chezmoi apply
        fi
    fi
}

extract() {
    case $1 in
    *.tar.gz | *.tgz) tar xzvf "$1" ;;
    *.tar.xz) tar Jxvf "$1" ;;
    *.zip) unzip "$1" ;;
    *.lzh) lha e "$1" ;;
    *.tar.bz2 | *.tbz) tar xjvf "$1" ;;
    *.tar.Z) tar zxvf "$1" ;;
    *.gz) gzip -d "$1" ;;
    *.bz2) bzip2 -dc "$1" ;;
    *.Z) uncompress "$1" ;;
    *.tar) tar xvf "$1" ;;
    *.arj) unarj "$1" ;;
    *) echo "'$1' cannot be extracted via extract()" ;;
    esac
}

randstr() {
    LC_ALL=C tr -dc 'a-zA-Z0-9' </dev/urandom | fold -w "${1:-32}" | head -n 1
}

#==============================================================#
##  ALIASES                                                   ##
#==============================================================#

alias d="dotfiles"

alias gs='git status'

alias kubectl='kubecolor'
alias k='kubectl'
alias kx='kubectx'
alias kn='kubens'

alias ssh="TERM=xterm ssh"

alias vim='nvim'
alias vi='nvim'

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias path='echo -e ${PATH//:/\\n}'
alias now='date +"%T"'
alias nowtime=now
alias nowdate='date +"%d-%m-%Y"'

# shellcheck disable=SC3009,SC2139
alias {gz,tgz,zip,lzh,bz1,tbz,Z,tar,arj,xz}=extract
